// Mocks generated by Mockito 5.4.4 from annotations
// in weather/test/presentation/controllers/weather/weather_info_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:weather/core/utils/result.dart' as _i2;
import 'package:weather/data/models/weather_request.dart' as _i6;
import 'package:weather/domain/entities/current/current_weather_info.dart'
    as _i5;
import 'package:weather/domain/entities/forecast/forecast_weather_info.dart'
    as _i8;
import 'package:weather/domain/usecase/get_current_weather_uc.dart' as _i3;
import 'package:weather/domain/usecase/get_forecast_weather_uc.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResult_0<T> extends _i1.SmartFake implements _i2.Result<T> {
  _FakeResult_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GetCurrentWeatherUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetCurrentWeatherUseCase extends _i1.Mock
    implements _i3.GetCurrentWeatherUseCase {
  MockGetCurrentWeatherUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Result<_i5.CurrentWeatherInfo>> call(
          _i6.WeatherRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [request],
        ),
        returnValue: _i4.Future<_i2.Result<_i5.CurrentWeatherInfo>>.value(
            _FakeResult_0<_i5.CurrentWeatherInfo>(
          this,
          Invocation.method(
            #call,
            [request],
          ),
        )),
      ) as _i4.Future<_i2.Result<_i5.CurrentWeatherInfo>>);
}

/// A class which mocks [GetForecastWeatherUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetForecastWeatherUseCase extends _i1.Mock
    implements _i7.GetForecastWeatherUseCase {
  MockGetForecastWeatherUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Result<List<_i8.ForecastWeatherInfo>>> call(
          _i6.WeatherRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [request],
        ),
        returnValue:
            _i4.Future<_i2.Result<List<_i8.ForecastWeatherInfo>>>.value(
                _FakeResult_0<List<_i8.ForecastWeatherInfo>>(
          this,
          Invocation.method(
            #call,
            [request],
          ),
        )),
      ) as _i4.Future<_i2.Result<List<_i8.ForecastWeatherInfo>>>);
}
